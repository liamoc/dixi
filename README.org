[[https://travis-ci.org/liamoc/dixi][file:https://travis-ci.org/liamoc/dixi.svg]] [[http://hackage.haskell.org/package/dixi][file:https://img.shields.io/hackage/v/dixi.svg]] [[http://haskell.org][file:https://img.shields.io/badge/language-Haskell-blue.svg]] [[https://github.com/liamoc/dixi/blob/master/LICENSE][file:http://img.shields.io/badge/license-BSD3-brightgreen.svg]]

* Dixi

*dīxī* (/v./ fp. s. perf. act. ind.) to speak, to declare.

This project is a simple wiki developed based on a
firm theoretical foundation.

Documents are not stored directly, but as a composition
tree of patches to an initial empty document. As our
patches support operational transform, edits can be
made to any version of each document and they are
transformed to be applied to the latest version.

This also makes it easy to use the group structure of
patches to be able to revert changes (or the composition
of several changes) from deep in a document's history and
preserve every other change.

Right now the wiki doesn't support many bells and whistles,
such as administrator control, configurability, or user accounts,
but they're coming.

* Using

At the moment, ~dixi~ is not on Hackage, although that will
change very soon.

In the meantime, you'll have to build it from source, using
the usual ~cabal~ ceremony.

#+BEGIN_SRC sh
cabal sandbox init
cabal install --only-dependencies
cabal build
./dist/build/dixi/dixi
#+END_SRC

The configuration file is in YAML format, and by default should
exist under ~config.yml~ in the current directory. Happily, ~dixi~ will prompt
you to create a file with the default configuration if it can't find the file.

The default configuration is simply:

#+BEGIN_SRC yaml
port: 8000     # TCP port to run on
storage: state # Directory to store data, must be writable.
#+END_SRC

You can also tell ~dixi~ to look elsewhere for a ~config.yml~ by
providing the file's path as a command-line argument, e.g:

#+BEGIN_SRC sh
dixi my/other/config.yml
#+END_SRC sh

Once dixi is running, just navigate to ~localhost:8000~ (or whatever port ~dixi~ is configured to run on)
and you will be shown the (presumably blank) Main Page. The toolbar at the top provides most useful tools.
Other pages are located at ~/Page_Title~. Underscores are displayed as spaces in the output, and spaces
in the URL are converted to underscores.
