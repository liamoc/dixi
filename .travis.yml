notifications:
  email:
    on_success: change
    on_failure: change

language: haskell
ghc:
- 7.8
- '7.10'

# The following enables several GHC versions to be tested; often it's enough to
# test only against the last release in a major GHC version. Feel free to omit
# lines listings versions you don't need/want testing for.
env:
 - USE_LTS_HASKELL=true
 - NOSNAPSHOT=true

sudo: false

install:
 - travis_retry cabal update
 - mkdir -p ~/sandbox
 - if [[ `ghc --numeric-version` == 7.4.* ]]; then;
     wget http://downloads.haskell.org/~ghc/7.10.2/ghc-7.10.2-x86_64-unknown-linux-deb7.tar.xz;
     tar -xJvf ghc-7.10.2-x86_64-unknown-linux-deb7.tar.xz;
     cd ghc-7.10.2;
     ./configure --prefix=~/sandbox;
     make install;
     export PATH=$HOME/sandbox/bin:$PATH;
   fi
 - if [[ `ghc --numeric-version` == 7.8.* ]]; then STACKAGESNAPSHOT=lts-2; fi
 - if [[ `ghc --numeric-version` == 7.10.* ]]; then STACKAGESNAPSHOT=lts-3;fi
 - if [[ -n "$NOSNAPSHOT" ]]; then STACKAGESNAPSHOT=; fi
 - if [[ -n "$STACKAGESNAPSHOT" ]]; then curl -L --silent https://www.stackage.org/$STACKAGESNAPSHOT/cabal.config | grep -v 'dixi ==' > cabal.config; fi
 - cd ~/sandbox
 - cabal sandbox init
 - cd -
 - cp ~/sandbox/cabal.sandbox.config .
 - cabal install text
 - cabal install -j2 --only-dependencies --enable-tests --enable-benchmarks

cache:
  directories:
    - $HOME/sandbox

# Here starts the actual work to be performed for the package under test; any
# command which exits with a non-zero exit code causes the build to fail.
script:
 - cabal configure --enable-tests --enable-benchmarks -v2
 - cabal build
 - cabal check
 - cabal sdist
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
